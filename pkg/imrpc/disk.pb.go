// Code generated by protoc-gen-go. DO NOT EDIT.
// source: disk.proto

package imrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DiskInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	TotalSize            int64    `protobuf:"varint,5,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	FreeSize             int64    `protobuf:"varint,6,opt,name=free_size,json=freeSize,proto3" json:"free_size,omitempty"`
	TotalBlocks          int64    `protobuf:"varint,7,opt,name=total_blocks,json=totalBlocks,proto3" json:"total_blocks,omitempty"`
	FreeBlocks           int64    `protobuf:"varint,8,opt,name=free_blocks,json=freeBlocks,proto3" json:"free_blocks,omitempty"`
	BlockSize            int64    `protobuf:"varint,9,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	ClusterSize          int64    `protobuf:"varint,10,opt,name=cluster_size,json=clusterSize,proto3" json:"cluster_size,omitempty"`
	Readonly             bool     `protobuf:"varint,11,opt,name=readonly,proto3" json:"readonly,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiskInfo) Reset()         { *m = DiskInfo{} }
func (m *DiskInfo) String() string { return proto.CompactTextString(m) }
func (*DiskInfo) ProtoMessage()    {}
func (*DiskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{0}
}

func (m *DiskInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskInfo.Unmarshal(m, b)
}
func (m *DiskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskInfo.Marshal(b, m, deterministic)
}
func (m *DiskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskInfo.Merge(m, src)
}
func (m *DiskInfo) XXX_Size() int {
	return xxx_messageInfo_DiskInfo.Size(m)
}
func (m *DiskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DiskInfo proto.InternalMessageInfo

func (m *DiskInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DiskInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *DiskInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *DiskInfo) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *DiskInfo) GetTotalSize() int64 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func (m *DiskInfo) GetFreeSize() int64 {
	if m != nil {
		return m.FreeSize
	}
	return 0
}

func (m *DiskInfo) GetTotalBlocks() int64 {
	if m != nil {
		return m.TotalBlocks
	}
	return 0
}

func (m *DiskInfo) GetFreeBlocks() int64 {
	if m != nil {
		return m.FreeBlocks
	}
	return 0
}

func (m *DiskInfo) GetBlockSize() int64 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *DiskInfo) GetClusterSize() int64 {
	if m != nil {
		return m.ClusterSize
	}
	return 0
}

func (m *DiskInfo) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

type ReplicaInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	BdevName             string   `protobuf:"bytes,3,opt,name=bdev_name,json=bdevName,proto3" json:"bdev_name,omitempty"`
	LvstoreUuid          string   `protobuf:"bytes,4,opt,name=lvstore_uuid,json=lvstoreUuid,proto3" json:"lvstore_uuid,omitempty"`
	TotalSize            int64    `protobuf:"varint,5,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	TotalBlocks          int64    `protobuf:"varint,6,opt,name=total_blocks,json=totalBlocks,proto3" json:"total_blocks,omitempty"`
	BlockSize            int64    `protobuf:"varint,7,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	ThinProvision        bool     `protobuf:"varint,8,opt,name=thin_provision,json=thinProvision,proto3" json:"thin_provision,omitempty"`
	State                string   `protobuf:"bytes,9,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaInfo) Reset()         { *m = ReplicaInfo{} }
func (m *ReplicaInfo) String() string { return proto.CompactTextString(m) }
func (*ReplicaInfo) ProtoMessage()    {}
func (*ReplicaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{1}
}

func (m *ReplicaInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaInfo.Unmarshal(m, b)
}
func (m *ReplicaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaInfo.Marshal(b, m, deterministic)
}
func (m *ReplicaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaInfo.Merge(m, src)
}
func (m *ReplicaInfo) XXX_Size() int {
	return xxx_messageInfo_ReplicaInfo.Size(m)
}
func (m *ReplicaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaInfo proto.InternalMessageInfo

func (m *ReplicaInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReplicaInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ReplicaInfo) GetBdevName() string {
	if m != nil {
		return m.BdevName
	}
	return ""
}

func (m *ReplicaInfo) GetLvstoreUuid() string {
	if m != nil {
		return m.LvstoreUuid
	}
	return ""
}

func (m *ReplicaInfo) GetTotalSize() int64 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func (m *ReplicaInfo) GetTotalBlocks() int64 {
	if m != nil {
		return m.TotalBlocks
	}
	return 0
}

func (m *ReplicaInfo) GetBlockSize() int64 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *ReplicaInfo) GetThinProvision() bool {
	if m != nil {
		return m.ThinProvision
	}
	return false
}

func (m *ReplicaInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type DiskCreateRequest struct {
	DiskName             string   `protobuf:"bytes,1,opt,name=disk_name,json=diskName,proto3" json:"disk_name,omitempty"`
	DiskPath             string   `protobuf:"bytes,2,opt,name=disk_path,json=diskPath,proto3" json:"disk_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiskCreateRequest) Reset()         { *m = DiskCreateRequest{} }
func (m *DiskCreateRequest) String() string { return proto.CompactTextString(m) }
func (*DiskCreateRequest) ProtoMessage()    {}
func (*DiskCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{2}
}

func (m *DiskCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskCreateRequest.Unmarshal(m, b)
}
func (m *DiskCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskCreateRequest.Marshal(b, m, deterministic)
}
func (m *DiskCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskCreateRequest.Merge(m, src)
}
func (m *DiskCreateRequest) XXX_Size() int {
	return xxx_messageInfo_DiskCreateRequest.Size(m)
}
func (m *DiskCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiskCreateRequest proto.InternalMessageInfo

func (m *DiskCreateRequest) GetDiskName() string {
	if m != nil {
		return m.DiskName
	}
	return ""
}

func (m *DiskCreateRequest) GetDiskPath() string {
	if m != nil {
		return m.DiskPath
	}
	return ""
}

type DiskCreateResponse struct {
	DiskInfo             *DiskInfo `protobuf:"bytes,1,opt,name=disk_info,json=diskInfo,proto3" json:"disk_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DiskCreateResponse) Reset()         { *m = DiskCreateResponse{} }
func (m *DiskCreateResponse) String() string { return proto.CompactTextString(m) }
func (*DiskCreateResponse) ProtoMessage()    {}
func (*DiskCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{3}
}

func (m *DiskCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskCreateResponse.Unmarshal(m, b)
}
func (m *DiskCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskCreateResponse.Marshal(b, m, deterministic)
}
func (m *DiskCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskCreateResponse.Merge(m, src)
}
func (m *DiskCreateResponse) XXX_Size() int {
	return xxx_messageInfo_DiskCreateResponse.Size(m)
}
func (m *DiskCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DiskCreateResponse proto.InternalMessageInfo

func (m *DiskCreateResponse) GetDiskInfo() *DiskInfo {
	if m != nil {
		return m.DiskInfo
	}
	return nil
}

type DiskInfoRequest struct {
	DiskPath             string   `protobuf:"bytes,1,opt,name=disk_path,json=diskPath,proto3" json:"disk_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiskInfoRequest) Reset()         { *m = DiskInfoRequest{} }
func (m *DiskInfoRequest) String() string { return proto.CompactTextString(m) }
func (*DiskInfoRequest) ProtoMessage()    {}
func (*DiskInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{4}
}

func (m *DiskInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskInfoRequest.Unmarshal(m, b)
}
func (m *DiskInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskInfoRequest.Marshal(b, m, deterministic)
}
func (m *DiskInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskInfoRequest.Merge(m, src)
}
func (m *DiskInfoRequest) XXX_Size() int {
	return xxx_messageInfo_DiskInfoRequest.Size(m)
}
func (m *DiskInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiskInfoRequest proto.InternalMessageInfo

func (m *DiskInfoRequest) GetDiskPath() string {
	if m != nil {
		return m.DiskPath
	}
	return ""
}

type DiskInfoResponse struct {
	DiskInfo             *DiskInfo `protobuf:"bytes,1,opt,name=disk_info,json=diskInfo,proto3" json:"disk_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DiskInfoResponse) Reset()         { *m = DiskInfoResponse{} }
func (m *DiskInfoResponse) String() string { return proto.CompactTextString(m) }
func (*DiskInfoResponse) ProtoMessage()    {}
func (*DiskInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{5}
}

func (m *DiskInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskInfoResponse.Unmarshal(m, b)
}
func (m *DiskInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskInfoResponse.Marshal(b, m, deterministic)
}
func (m *DiskInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskInfoResponse.Merge(m, src)
}
func (m *DiskInfoResponse) XXX_Size() int {
	return xxx_messageInfo_DiskInfoResponse.Size(m)
}
func (m *DiskInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DiskInfoResponse proto.InternalMessageInfo

func (m *DiskInfoResponse) GetDiskInfo() *DiskInfo {
	if m != nil {
		return m.DiskInfo
	}
	return nil
}

type ReplicaCreateRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LvstoreUuid          string   `protobuf:"bytes,2,opt,name=lvstore_uuid,json=lvstoreUuid,proto3" json:"lvstore_uuid,omitempty"`
	Size                 int64    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaCreateRequest) Reset()         { *m = ReplicaCreateRequest{} }
func (m *ReplicaCreateRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaCreateRequest) ProtoMessage()    {}
func (*ReplicaCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{6}
}

func (m *ReplicaCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaCreateRequest.Unmarshal(m, b)
}
func (m *ReplicaCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaCreateRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaCreateRequest.Merge(m, src)
}
func (m *ReplicaCreateRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaCreateRequest.Size(m)
}
func (m *ReplicaCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaCreateRequest proto.InternalMessageInfo

func (m *ReplicaCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReplicaCreateRequest) GetLvstoreUuid() string {
	if m != nil {
		return m.LvstoreUuid
	}
	return ""
}

func (m *ReplicaCreateRequest) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type ReplicaCreateResponse struct {
	ReplicaInfo          *ReplicaInfo `protobuf:"bytes,1,opt,name=replica_info,json=replicaInfo,proto3" json:"replica_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReplicaCreateResponse) Reset()         { *m = ReplicaCreateResponse{} }
func (m *ReplicaCreateResponse) String() string { return proto.CompactTextString(m) }
func (*ReplicaCreateResponse) ProtoMessage()    {}
func (*ReplicaCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{7}
}

func (m *ReplicaCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaCreateResponse.Unmarshal(m, b)
}
func (m *ReplicaCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaCreateResponse.Marshal(b, m, deterministic)
}
func (m *ReplicaCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaCreateResponse.Merge(m, src)
}
func (m *ReplicaCreateResponse) XXX_Size() int {
	return xxx_messageInfo_ReplicaCreateResponse.Size(m)
}
func (m *ReplicaCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaCreateResponse proto.InternalMessageInfo

func (m *ReplicaCreateResponse) GetReplicaInfo() *ReplicaInfo {
	if m != nil {
		return m.ReplicaInfo
	}
	return nil
}

type ReplicaInfoRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LvstoreUuid          string   `protobuf:"bytes,2,opt,name=lvstore_uuid,json=lvstoreUuid,proto3" json:"lvstore_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaInfoRequest) Reset()         { *m = ReplicaInfoRequest{} }
func (m *ReplicaInfoRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaInfoRequest) ProtoMessage()    {}
func (*ReplicaInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{8}
}

func (m *ReplicaInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaInfoRequest.Unmarshal(m, b)
}
func (m *ReplicaInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaInfoRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaInfoRequest.Merge(m, src)
}
func (m *ReplicaInfoRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaInfoRequest.Size(m)
}
func (m *ReplicaInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaInfoRequest proto.InternalMessageInfo

func (m *ReplicaInfoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReplicaInfoRequest) GetLvstoreUuid() string {
	if m != nil {
		return m.LvstoreUuid
	}
	return ""
}

type ReplicaDeleteRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LvstoreUuid          string   `protobuf:"bytes,2,opt,name=lvstore_uuid,json=lvstoreUuid,proto3" json:"lvstore_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaDeleteRequest) Reset()         { *m = ReplicaDeleteRequest{} }
func (m *ReplicaDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaDeleteRequest) ProtoMessage()    {}
func (*ReplicaDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{9}
}

func (m *ReplicaDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaDeleteRequest.Unmarshal(m, b)
}
func (m *ReplicaDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaDeleteRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaDeleteRequest.Merge(m, src)
}
func (m *ReplicaDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaDeleteRequest.Size(m)
}
func (m *ReplicaDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaDeleteRequest proto.InternalMessageInfo

func (m *ReplicaDeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReplicaDeleteRequest) GetLvstoreUuid() string {
	if m != nil {
		return m.LvstoreUuid
	}
	return ""
}

type ReplicaInfoResponse struct {
	ReplicaInfo          *ReplicaInfo `protobuf:"bytes,1,opt,name=replica_info,json=replicaInfo,proto3" json:"replica_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReplicaInfoResponse) Reset()         { *m = ReplicaInfoResponse{} }
func (m *ReplicaInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ReplicaInfoResponse) ProtoMessage()    {}
func (*ReplicaInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{10}
}

func (m *ReplicaInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaInfoResponse.Unmarshal(m, b)
}
func (m *ReplicaInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaInfoResponse.Marshal(b, m, deterministic)
}
func (m *ReplicaInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaInfoResponse.Merge(m, src)
}
func (m *ReplicaInfoResponse) XXX_Size() int {
	return xxx_messageInfo_ReplicaInfoResponse.Size(m)
}
func (m *ReplicaInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaInfoResponse proto.InternalMessageInfo

func (m *ReplicaInfoResponse) GetReplicaInfo() *ReplicaInfo {
	if m != nil {
		return m.ReplicaInfo
	}
	return nil
}

type ReplicaListResponse struct {
	ReplicaInfos         map[string]*ReplicaInfo `protobuf:"bytes,1,rep,name=replica_infos,json=replicaInfos,proto3" json:"replica_infos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ReplicaListResponse) Reset()         { *m = ReplicaListResponse{} }
func (m *ReplicaListResponse) String() string { return proto.CompactTextString(m) }
func (*ReplicaListResponse) ProtoMessage()    {}
func (*ReplicaListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{11}
}

func (m *ReplicaListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaListResponse.Unmarshal(m, b)
}
func (m *ReplicaListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaListResponse.Marshal(b, m, deterministic)
}
func (m *ReplicaListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaListResponse.Merge(m, src)
}
func (m *ReplicaListResponse) XXX_Size() int {
	return xxx_messageInfo_ReplicaListResponse.Size(m)
}
func (m *ReplicaListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaListResponse proto.InternalMessageInfo

func (m *ReplicaListResponse) GetReplicaInfos() map[string]*ReplicaInfo {
	if m != nil {
		return m.ReplicaInfos
	}
	return nil
}

type VersionResponse struct {
	Version                              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	GitCommit                            string   `protobuf:"bytes,2,opt,name=gitCommit,proto3" json:"gitCommit,omitempty"`
	BuildDate                            string   `protobuf:"bytes,3,opt,name=buildDate,proto3" json:"buildDate,omitempty"`
	InstanceManagerDiskServiceVersion    int64    `protobuf:"varint,4,opt,name=instanceManagerDiskServiceVersion,proto3" json:"instanceManagerDiskServiceVersion,omitempty"`
	InstanceManagerDiskServiceMinVersion int64    `protobuf:"varint,5,opt,name=instanceManagerDiskServiceMinVersion,proto3" json:"instanceManagerDiskServiceMinVersion,omitempty"`
	XXX_NoUnkeyedLiteral                 struct{} `json:"-"`
	XXX_unrecognized                     []byte   `json:"-"`
	XXX_sizecache                        int32    `json:"-"`
}

func (m *VersionResponse) Reset()         { *m = VersionResponse{} }
func (m *VersionResponse) String() string { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()    {}
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{12}
}

func (m *VersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResponse.Unmarshal(m, b)
}
func (m *VersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResponse.Marshal(b, m, deterministic)
}
func (m *VersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResponse.Merge(m, src)
}
func (m *VersionResponse) XXX_Size() int {
	return xxx_messageInfo_VersionResponse.Size(m)
}
func (m *VersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResponse proto.InternalMessageInfo

func (m *VersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *VersionResponse) GetGitCommit() string {
	if m != nil {
		return m.GitCommit
	}
	return ""
}

func (m *VersionResponse) GetBuildDate() string {
	if m != nil {
		return m.BuildDate
	}
	return ""
}

func (m *VersionResponse) GetInstanceManagerDiskServiceVersion() int64 {
	if m != nil {
		return m.InstanceManagerDiskServiceVersion
	}
	return 0
}

func (m *VersionResponse) GetInstanceManagerDiskServiceMinVersion() int64 {
	if m != nil {
		return m.InstanceManagerDiskServiceMinVersion
	}
	return 0
}

func init() {
	proto.RegisterType((*DiskInfo)(nil), "imrpc.DiskInfo")
	proto.RegisterType((*ReplicaInfo)(nil), "imrpc.ReplicaInfo")
	proto.RegisterType((*DiskCreateRequest)(nil), "imrpc.DiskCreateRequest")
	proto.RegisterType((*DiskCreateResponse)(nil), "imrpc.DiskCreateResponse")
	proto.RegisterType((*DiskInfoRequest)(nil), "imrpc.DiskInfoRequest")
	proto.RegisterType((*DiskInfoResponse)(nil), "imrpc.DiskInfoResponse")
	proto.RegisterType((*ReplicaCreateRequest)(nil), "imrpc.ReplicaCreateRequest")
	proto.RegisterType((*ReplicaCreateResponse)(nil), "imrpc.ReplicaCreateResponse")
	proto.RegisterType((*ReplicaInfoRequest)(nil), "imrpc.ReplicaInfoRequest")
	proto.RegisterType((*ReplicaDeleteRequest)(nil), "imrpc.ReplicaDeleteRequest")
	proto.RegisterType((*ReplicaInfoResponse)(nil), "imrpc.ReplicaInfoResponse")
	proto.RegisterType((*ReplicaListResponse)(nil), "imrpc.ReplicaListResponse")
	proto.RegisterMapType((map[string]*ReplicaInfo)(nil), "imrpc.ReplicaListResponse.ReplicaInfosEntry")
	proto.RegisterType((*VersionResponse)(nil), "imrpc.VersionResponse")
}

func init() { proto.RegisterFile("disk.proto", fileDescriptor_f96b80c5532b4167) }

var fileDescriptor_f96b80c5532b4167 = []byte{
	// 809 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xdd, 0x6e, 0xda, 0x48,
	0x14, 0x96, 0x0d, 0x24, 0xe6, 0x98, 0xfc, 0xcd, 0x66, 0xb3, 0x8e, 0x49, 0xb4, 0xc4, 0xda, 0x95,
	0xb8, 0x88, 0x88, 0x94, 0xd5, 0x4a, 0xab, 0x6d, 0x2f, 0x9a, 0x84, 0xa8, 0x6a, 0x1b, 0xa2, 0xd4,
	0x51, 0x7b, 0x8b, 0x0c, 0x0c, 0x64, 0x84, 0xb1, 0x5d, 0xcf, 0x80, 0x44, 0xde, 0xa0, 0xd7, 0x7d,
	0x95, 0xde, 0xf6, 0x75, 0xfa, 0x1c, 0xd5, 0xfc, 0xd8, 0xd8, 0x06, 0x94, 0xaa, 0xb9, 0x9b, 0xf9,
	0xce, 0x77, 0x7e, 0xe6, 0x9b, 0x73, 0x66, 0x00, 0x06, 0x84, 0x8e, 0x5b, 0x51, 0x1c, 0xb2, 0x10,
	0x55, 0xc8, 0x24, 0x8e, 0xfa, 0x76, 0x7d, 0x14, 0x86, 0x23, 0x1f, 0x9f, 0x09, 0xb0, 0x37, 0x1d,
	0x9e, 0xe1, 0x49, 0xc4, 0xe6, 0x92, 0xe3, 0x7c, 0xd5, 0xc1, 0x68, 0x13, 0x3a, 0x7e, 0x13, 0x0c,
	0x43, 0xb4, 0x0d, 0x3a, 0x19, 0x58, 0x5a, 0x43, 0x6b, 0x56, 0x5d, 0x9d, 0x0c, 0x10, 0x82, 0xf2,
	0x74, 0x4a, 0x06, 0x96, 0x2e, 0x10, 0xb1, 0xe6, 0x58, 0xe4, 0xb1, 0x07, 0xab, 0x24, 0x31, 0xbe,
	0xe6, 0x18, 0x9b, 0x47, 0xd8, 0x2a, 0x4b, 0x8c, 0xaf, 0xd1, 0x31, 0x00, 0x0b, 0x99, 0xe7, 0x77,
	0x29, 0x79, 0xc4, 0x56, 0xa5, 0xa1, 0x35, 0x4b, 0x6e, 0x55, 0x20, 0xf7, 0xe4, 0x11, 0xa3, 0x3a,
	0x54, 0x87, 0x31, 0xc6, 0xd2, 0xba, 0x21, 0xac, 0x06, 0x07, 0x84, 0xf1, 0x04, 0x6a, 0xd2, 0xb7,
	0xe7, 0x87, 0xfd, 0x31, 0xb5, 0x36, 0x85, 0xdd, 0x14, 0xd8, 0xa5, 0x80, 0xd0, 0x9f, 0x60, 0x0a,
	0x7f, 0xc5, 0x30, 0x04, 0x03, 0x38, 0xa4, 0x08, 0xc7, 0x00, 0xc2, 0x26, 0x33, 0x54, 0x65, 0x7e,
	0x81, 0x24, 0x29, 0xfa, 0xfe, 0x94, 0x32, 0x1c, 0x4b, 0x02, 0xc8, 0x14, 0x0a, 0x13, 0x14, 0x1b,
	0x8c, 0x18, 0x7b, 0x83, 0x30, 0xf0, 0xe7, 0x96, 0xd9, 0xd0, 0x9a, 0x86, 0x9b, 0xee, 0x9d, 0x2f,
	0x3a, 0x98, 0x2e, 0x8e, 0x7c, 0xd2, 0xf7, 0x84, 0x72, 0x08, 0xca, 0x81, 0x37, 0xc1, 0x4a, 0x3b,
	0xb1, 0x5e, 0xa9, 0x5e, 0x1d, 0xaa, 0xbd, 0x01, 0x9e, 0x75, 0x05, 0x59, 0x4a, 0x68, 0x70, 0xe0,
	0x96, 0x3b, 0x9c, 0x40, 0xcd, 0x9f, 0x51, 0x16, 0xc6, 0xb8, 0x2b, 0x1c, 0xa5, 0x9c, 0xa6, 0xc2,
	0x3e, 0x70, 0xff, 0x27, 0x54, 0x2d, 0x0a, 0xb7, 0xb1, 0x2c, 0x5c, 0x5e, 0x97, 0xcd, 0xa2, 0x2e,
	0x7f, 0xc3, 0x36, 0x7b, 0x20, 0x41, 0x37, 0x8a, 0xc3, 0x19, 0xa1, 0x24, 0x0c, 0x84, 0xb4, 0x86,
	0xbb, 0xc5, 0xd1, 0xbb, 0x04, 0x44, 0xfb, 0x50, 0xa1, 0xcc, 0x63, 0x52, 0xd8, 0xaa, 0x2b, 0x37,
	0x4e, 0x07, 0xf6, 0x78, 0x2f, 0x5d, 0xc5, 0xd8, 0x63, 0xd8, 0xc5, 0x9f, 0xa6, 0x98, 0x32, 0x7e,
	0x64, 0xde, 0x93, 0xdd, 0x8c, 0x3e, 0x06, 0x07, 0xc4, 0x91, 0x13, 0xa3, 0x68, 0x29, 0x7d, 0x61,
	0xbc, 0xf3, 0xd8, 0x83, 0x73, 0x09, 0x28, 0x1b, 0x8e, 0x46, 0x61, 0x40, 0x31, 0x3a, 0x55, 0x2e,
	0x24, 0x18, 0x86, 0x22, 0x9e, 0x79, 0xbe, 0xd3, 0x12, 0x9d, 0xde, 0x4a, 0x1a, 0x59, 0xc6, 0xe0,
	0x2b, 0xa7, 0x05, 0x3b, 0x29, 0x5a, 0x28, 0x48, 0xe4, 0xd4, 0x0a, 0x39, 0x5f, 0xc1, 0xee, 0x82,
	0xff, 0x4b, 0x19, 0x3d, 0xd8, 0x57, 0x9d, 0x91, 0xd7, 0x61, 0x55, 0x8b, 0x14, 0x6f, 0x5c, 0x5f,
	0xbe, 0x71, 0x04, 0x65, 0x71, 0x53, 0x25, 0x71, 0x53, 0x62, 0xed, 0xdc, 0xc2, 0xef, 0x85, 0x14,
	0xaa, 0xd2, 0x7f, 0xa1, 0x16, 0x4b, 0x43, 0xb6, 0x58, 0xa4, 0x8a, 0xcd, 0x34, 0xac, 0x6b, 0xc6,
	0x8b, 0x8d, 0xf3, 0x0e, 0x50, 0xd6, 0xf6, 0xac, 0x82, 0x9d, 0x4e, 0x7a, 0xfe, 0x36, 0xf6, 0xf1,
	0x73, 0xcf, 0xef, 0xdc, 0xc0, 0x6f, 0xb9, 0xda, 0x9e, 0x77, 0xd2, 0x6f, 0x5a, 0x1a, 0xee, 0x86,
	0x50, 0x96, 0x86, 0x7b, 0x0f, 0x5b, 0xd9, 0x70, 0xd4, 0xd2, 0x1a, 0xa5, 0xa6, 0x79, 0x7e, 0x9a,
	0x8f, 0x97, 0x75, 0xc9, 0xe6, 0xa0, 0xd7, 0x01, 0x8b, 0xe7, 0x6e, 0x2d, 0x93, 0x89, 0xda, 0xf7,
	0xb0, 0xb7, 0x44, 0x41, 0xbb, 0x50, 0x1a, 0xe3, 0xb9, 0xd2, 0x80, 0x2f, 0x51, 0x13, 0x2a, 0x33,
	0xcf, 0x9f, 0x62, 0x71, 0xf6, 0xd5, 0x27, 0x90, 0x84, 0xff, 0xf5, 0xff, 0x34, 0xe7, 0xb3, 0x0e,
	0x3b, 0x1f, 0x71, 0xcc, 0x67, 0x30, 0xad, 0xdd, 0x82, 0xcd, 0x99, 0x84, 0x54, 0xdc, 0x64, 0x8b,
	0x8e, 0xa0, 0x3a, 0x22, 0xec, 0x2a, 0x9c, 0x4c, 0x08, 0x53, 0xda, 0x2e, 0x00, 0x6e, 0xed, 0x4d,
	0x89, 0x3f, 0x68, 0xf3, 0x39, 0x96, 0x6f, 0xd1, 0x02, 0x40, 0x37, 0x70, 0x42, 0x02, 0xca, 0xbc,
	0xa0, 0x8f, 0x3b, 0x5e, 0xe0, 0x8d, 0x70, 0xcc, 0x7b, 0xfd, 0x1e, 0xc7, 0x33, 0xd2, 0xc7, 0xaa,
	0x04, 0xf1, 0x42, 0x95, 0xdc, 0xa7, 0x89, 0xc8, 0x85, 0xbf, 0xd6, 0x93, 0x3a, 0x24, 0x48, 0x02,
	0xca, 0x17, 0xed, 0xa7, 0xb8, 0xe7, 0xdf, 0x4b, 0x60, 0x66, 0x2c, 0xe8, 0x02, 0x60, 0xf1, 0x5c,
	0x20, 0x2b, 0x33, 0xa1, 0xb9, 0x41, 0xb4, 0x0f, 0x57, 0x58, 0x94, 0x94, 0x2f, 0x32, 0x9f, 0xe1,
	0x41, 0x71, 0xc4, 0x95, 0xfb, 0x1f, 0x4b, 0xb8, 0x72, 0x7e, 0x0b, 0x5b, 0xb9, 0xa9, 0x44, 0xf5,
	0xfc, 0x5d, 0xe6, 0xab, 0x38, 0x5a, 0x6d, 0x54, 0xb1, 0xda, 0x69, 0x2c, 0x39, 0x44, 0xc5, 0x58,
	0xb9, 0xd1, 0xb2, 0x0f, 0x5a, 0xf2, 0x8b, 0x6f, 0x25, 0x5f, 0x7c, 0xeb, 0x9a, 0x7f, 0xf1, 0xe8,
	0x22, 0xfd, 0xa4, 0x78, 0xe7, 0xa2, 0x35, 0x34, 0xdb, 0x5e, 0xdf, 0xe5, 0xa8, 0x9d, 0xff, 0xe7,
	0x0e, 0x57, 0xb4, 0xa7, 0x2a, 0xc2, 0x5e, 0x65, 0x52, 0x51, 0x5e, 0x02, 0xa8, 0x5b, 0x7b, 0x8d,
	0xd7, 0xd7, 0x91, 0x28, 0x5e, 0x68, 0xf0, 0xde, 0x86, 0xe0, 0xfd, 0xf3, 0x23, 0x00, 0x00, 0xff,
	0xff, 0x2c, 0x1c, 0x8f, 0x85, 0xdc, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DiskServiceClient is the client API for DiskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiskServiceClient interface {
	DiskCreate(ctx context.Context, in *DiskCreateRequest, opts ...grpc.CallOption) (*DiskCreateResponse, error)
	DiskInfo(ctx context.Context, in *DiskInfoRequest, opts ...grpc.CallOption) (*DiskInfoResponse, error)
	ReplicaCreate(ctx context.Context, in *ReplicaCreateRequest, opts ...grpc.CallOption) (*ReplicaCreateResponse, error)
	ReplicaDelete(ctx context.Context, in *ReplicaDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ReplicaList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReplicaListResponse, error)
	ReplicaInfo(ctx context.Context, in *ReplicaInfoRequest, opts ...grpc.CallOption) (*ReplicaInfoResponse, error)
	VersionGet(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionResponse, error)
}

type diskServiceClient struct {
	cc *grpc.ClientConn
}

func NewDiskServiceClient(cc *grpc.ClientConn) DiskServiceClient {
	return &diskServiceClient{cc}
}

func (c *diskServiceClient) DiskCreate(ctx context.Context, in *DiskCreateRequest, opts ...grpc.CallOption) (*DiskCreateResponse, error) {
	out := new(DiskCreateResponse)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/DiskCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diskServiceClient) DiskInfo(ctx context.Context, in *DiskInfoRequest, opts ...grpc.CallOption) (*DiskInfoResponse, error) {
	out := new(DiskInfoResponse)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/DiskInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diskServiceClient) ReplicaCreate(ctx context.Context, in *ReplicaCreateRequest, opts ...grpc.CallOption) (*ReplicaCreateResponse, error) {
	out := new(ReplicaCreateResponse)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/ReplicaCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diskServiceClient) ReplicaDelete(ctx context.Context, in *ReplicaDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/ReplicaDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diskServiceClient) ReplicaList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReplicaListResponse, error) {
	out := new(ReplicaListResponse)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/ReplicaList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diskServiceClient) ReplicaInfo(ctx context.Context, in *ReplicaInfoRequest, opts ...grpc.CallOption) (*ReplicaInfoResponse, error) {
	out := new(ReplicaInfoResponse)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/ReplicaInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diskServiceClient) VersionGet(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/VersionGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiskServiceServer is the server API for DiskService service.
type DiskServiceServer interface {
	DiskCreate(context.Context, *DiskCreateRequest) (*DiskCreateResponse, error)
	DiskInfo(context.Context, *DiskInfoRequest) (*DiskInfoResponse, error)
	ReplicaCreate(context.Context, *ReplicaCreateRequest) (*ReplicaCreateResponse, error)
	ReplicaDelete(context.Context, *ReplicaDeleteRequest) (*empty.Empty, error)
	ReplicaList(context.Context, *empty.Empty) (*ReplicaListResponse, error)
	ReplicaInfo(context.Context, *ReplicaInfoRequest) (*ReplicaInfoResponse, error)
	VersionGet(context.Context, *empty.Empty) (*VersionResponse, error)
}

// UnimplementedDiskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDiskServiceServer struct {
}

func (*UnimplementedDiskServiceServer) DiskCreate(ctx context.Context, req *DiskCreateRequest) (*DiskCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DiskCreate not implemented")
}
func (*UnimplementedDiskServiceServer) DiskInfo(ctx context.Context, req *DiskInfoRequest) (*DiskInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DiskInfo not implemented")
}
func (*UnimplementedDiskServiceServer) ReplicaCreate(ctx context.Context, req *ReplicaCreateRequest) (*ReplicaCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaCreate not implemented")
}
func (*UnimplementedDiskServiceServer) ReplicaDelete(ctx context.Context, req *ReplicaDeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaDelete not implemented")
}
func (*UnimplementedDiskServiceServer) ReplicaList(ctx context.Context, req *empty.Empty) (*ReplicaListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaList not implemented")
}
func (*UnimplementedDiskServiceServer) ReplicaInfo(ctx context.Context, req *ReplicaInfoRequest) (*ReplicaInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaInfo not implemented")
}
func (*UnimplementedDiskServiceServer) VersionGet(ctx context.Context, req *empty.Empty) (*VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VersionGet not implemented")
}

func RegisterDiskServiceServer(s *grpc.Server, srv DiskServiceServer) {
	s.RegisterService(&_DiskService_serviceDesc, srv)
}

func _DiskService_DiskCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiskCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).DiskCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/DiskCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).DiskCreate(ctx, req.(*DiskCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiskService_DiskInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiskInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).DiskInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/DiskInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).DiskInfo(ctx, req.(*DiskInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiskService_ReplicaCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).ReplicaCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/ReplicaCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).ReplicaCreate(ctx, req.(*ReplicaCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiskService_ReplicaDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).ReplicaDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/ReplicaDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).ReplicaDelete(ctx, req.(*ReplicaDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiskService_ReplicaList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).ReplicaList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/ReplicaList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).ReplicaList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiskService_ReplicaInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).ReplicaInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/ReplicaInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).ReplicaInfo(ctx, req.(*ReplicaInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiskService_VersionGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).VersionGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/VersionGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).VersionGet(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _DiskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "imrpc.DiskService",
	HandlerType: (*DiskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DiskCreate",
			Handler:    _DiskService_DiskCreate_Handler,
		},
		{
			MethodName: "DiskInfo",
			Handler:    _DiskService_DiskInfo_Handler,
		},
		{
			MethodName: "ReplicaCreate",
			Handler:    _DiskService_ReplicaCreate_Handler,
		},
		{
			MethodName: "ReplicaDelete",
			Handler:    _DiskService_ReplicaDelete_Handler,
		},
		{
			MethodName: "ReplicaList",
			Handler:    _DiskService_ReplicaList_Handler,
		},
		{
			MethodName: "ReplicaInfo",
			Handler:    _DiskService_ReplicaInfo_Handler,
		},
		{
			MethodName: "VersionGet",
			Handler:    _DiskService_VersionGet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "disk.proto",
}
